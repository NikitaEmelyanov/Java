package AlgorithmsAndDataStructures;

/**
 * Урок 5. Жадные алгоритмы. Введение
 */
public class Les5_Greedy_Algoritms {
    public static void main(String[] args) {
        //3 самые распространенные техники создания алгоритмов
        //1) Жадные алгоритмы (Greedy algorithms)
        //2) Принцип Разделяй и властвуй (Divide and Conquer)
        //3) Динамическое программирование (Dynamic Programming)

        //Идея жадных алгоритмов
        // На каждом шаге алгоритма совершать локально оптимальные решения. Последовательность
        // локально оптимальных решений приводит (не всегда) к глобально оптимальному решению

        //Примеры:

        //Задача 1
        //Дан неупорядоченный список цифр от 0 до 9. Составить из этих цифр наибольшее число.
        //                               3 1 7 9 9 5
        //                          /         |         \
        //              1 3 7 5 9 9       9 1 7 5 9 3     ??? (Наибольшее)
        //Жадная стратегия
        //На каждом шаге выбрать наибольшую цифру, присоединять ее к результирующему числу,
        // удалять эту цифру из исходного массива

        //Задача 2
        //Вы едите на автомобиле. Автомобиль может проехать на одной заправке 400 км. На пути от
        // точки А до точки Б есть несколько заправок. Надо проехать от точки А до точки Б с
        // минимальным количеством остановок на заправку.
        // А(0 км)...200км(заправка)...375км(заправка)...550км(заправка)...750км(заправка)...Б(950км)
        //0км -> 550км -> 750 км -> 950 км (3 остановки)
        //0км -> 375км ->750км -> 950км (2 остановки) (Оптимальное)
        //Жадная стратегия
        //Заправляться на колонке, которая дальше всех о не дальше чем 400 км от текущей
        // (оптимальный локальный выбор, который приведет к оптимальному глобальному выбору)
        //При построении Жадного алгоритма важно подумать, является ли ваше жадное локальное
        // решение безопасным шагом !
        //Шаг называется безопасным, если он приводит к оптимальному решению
        //Заправляться на самой дальней заправке - безопасный шаг (доказательство интуитивно понятно)
        //Иногда шаги бывают не безопасными

        //Пример небезопасного шага (Жадный алгоритм не применим)
        //Проблема размена денег (найти наименьшее количество монет с помощью который можно
        // разменять данную сумму)
        //Есть монеты достоинством 1, 5,10, 20, 25, 50 центов. Надо разменять 40 центов этими монетами
        //Жадная стратегия
        //На каждом шаге выбирать наибольшую по достоинству монету, не превышая остаток
        //Ответ: (3 монеты) - 40 = 25 + 10 + 5
        //Но можно: (2 монеты) - 40 = 20 + 20
        //На каждом шаге выбирать наибольшую по достоинству монету не безопасный ход.
        // Жадный алгоритм не приводит к оптимальному решению
    }
}
