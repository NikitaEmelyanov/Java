package Java;

public class Les15_Methods {
    public static void main(String[] args) {
        //Урок 15: Методы в Java

        // Методы и функции это условно говоря одно и то же, но нужно отметить что функции записываются вне классов,
// а методы записываются внутри классов, но поскольку язык Java объектоориентирован и каждый объект является
// классом понятия функции не существует как такового, а существуют лишь методы.

        Person1 person1 = new Person1();
        person1.name = "Роман";
        person1.age = 50;
        person1.sayHello ();

        Person1 person2 = new Person1();
        person2.name = "Вова";
        person2.age = 20;
        person2.speak ();
        //Для вызова метода и выполнения участка кода, который прописан в данном методе, нужно
        //обращаться к нему через . и название метода

        short num = 7;
        int result1 = summa ((short) 5, num);

        short num2 = 8;
        int result2 = summa ((short) 5, num2);
        info(String.valueOf(result2));
        // при использовании .valueof для result2 ммы можем преобразовать значение int в строку String
    }

    public static void info(String word) {
// Метод не может быть записан в теле другого метода, по этому при создании нового метода создаем его отдельно
// вне тала предыдущего метода
// Ключевое слово void говорит о том, что метод ничего не будет возвращать
        System.out.print(word);
// При создании новой функции info() и запуске программы ничего отображаться не будет, так как нужно создаваемые
//функции вызывать вручную, для этого нужно в теле основной функции прописать info(); для ее вызова. Далее каждый
//вызов этой функции будет сопровождаться исполнением кода внутри тела функции.

// То есть чтобы не прописывать каждый раз кусок кода, который находится внутри вызываемой функции нужно просто
// вызвать функцию снова и все действия снова выполнятся
        System.out.println("!");
    }
/* На данном примере мы вызывали функцию info 3 раза и каждый раз с разными параметрами для String
1) При первом запуске мы задали параметр для word "Hello"
Внутри программы мы указали что нужно вывести ! после строки
2)При втором вызове функции мы присваиваем значение переменной и запускаем функцию со значением java
3) При Третьем вызове функции мы запускаем программу с "" для отображения ! в пустой строке
 */

    public static int summa (short a, short b) {
        int res = a + b;
        String result = "Результат: " + res;
        info(result);
        return res;
// Для возврата из функции вместо void используем int для возврата целого числа
//                                                boolean для возврата значения true или false
//                                                float для возврата не целого числа
//                                                String для возврата строки
//                                                и т.д.
    }
}
class Person1{
    String name;
    int age;

    void speak(){
        System.out.println("Меня зовут "+ name + ","+ "мне "+ age +" "+ "лет");
    }
    void sayHello(){
        System.out.println("Привет");
    }
}