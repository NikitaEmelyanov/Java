package Java.Les37_Exceptions_Part1;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Les37_Exceptions_Part1 {
    public static void main(String[] args) {
        //Урок 37: Исключения (часть 1). Обработка исключений.

        //При нажатии Command+Enter среда разработки сама может предложить 2 выхода
        //1) add exception to method signature - то есть мы говорим, что при выполнении данного
        // метода может произойти ошибка FileNotFoundException, так как файла возможно нет.
        //При запуске программы будет ошибка. Строка метода будет выглядеть так:
        // public static void main(String[] args) throws FileNotFoundException {
        File file = new File("Other file");
        try {
            //В блоке try находится весь код который может вызвать исключения
            Scanner scanner = new Scanner(file);
        } catch (FileNotFoundException e) {
            //В блоке catch находиться код обработки данного исключения. А точнее объект у
            //которого были выявлены проблемы и стандартная реализация - выведение такой же ошибки.
            //Мы можем самостоятельно задать реализацию такого сценария, изменив реализацию
            System.out.println("Файл не найден");
        }
        //2)Surround with try/catch - самостоятельная обработка исключения с возможностью
        // редактирования кода обработки данного исключения

        System.out.println("После блока try catch");
        //В блок try можно так же ввести дополнительные параметры, например вывод фразы на
        //экран, то есть если файл есть в блоке try выполняется часть кода соответственно,
        //блок catch выполняться не будет и наоборот. После выполнения одного из условий или
        //попытки (try) запуска кода с возможными исключениями или последующей обработке
        //данного исключения можно продолжать написание кода, все будет работать корректно.

    }
   // Если обработать исключение по умолчанию через add exception to method signature
    // получаем такую корректировку сигнатуры метода: throws FileNotFoundException, а при
    //дальнейшем вызове этого метода получим те же самые рекомендации от среды разработки
    // и получается что обработку данного исключения придется делать вручную. Но если файл
    //точно есть можно использовать обработку исключений по умолчанию
}
