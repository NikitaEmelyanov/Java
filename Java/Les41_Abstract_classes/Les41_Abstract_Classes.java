package Java.Les41_Abstract_classes;

public class Les41_Abstract_Classes {
    public static void main(String[] args) {
        //Урок 41: Абстрактные классы.

        //Абстрактные классы используются тогда, когда необходимо создать иерархию классов, но
        //класс родитель не является самостоятельным классом.
        Cat cat = new Cat();
        Dog dog = new Dog();

        //Абстрактный класс, это тот класс, который имеет ограниченный функционал, на основе
        // данного класса нельзя будет создать объекты, а так же сам по себе абстрактный класс
        // не реализует никакие методы. Для создания абстрактного класса нужно добавить
        // abstract перед словом class. Данный класс не реализовывает методы, а описывает их,
        // и говорит о том, что данные методы должны существовать в классе наследнике. То есть
        // именно в классах наследниках мы реализуем те методы которые описали в абстрактном
        // классе, а уже на основе реализуемых классом можем создавать объекты. Также в
        // абстрактном классе можно создавать абстрактные методы.

        dog.makeSound();
        cat.makeSound();
        dog.eat();
        cat.eat();

    }
    //Абстрактные классы и интерфейсы очень схожи между собой, но Интерфейсы и абстрактные
    // классы имеют различия и должны использоваться в разных случаях. Интерфейс это своего
    // рада контракт и указывает на то что класс умеет делать, а абстрактный класс это то чем
    //класс является. Например, мы можем реализовывать методы нескольких интерфейсов (любое
    //количество), и мы будем обязаны реализовать мве методы описанные в интерфейсах,  но можем
    // унаследовать все только от одного класса
}
