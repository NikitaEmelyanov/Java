package Java.Les29_Polymorphism;

public class Dog extends Animal{
    //Полиморфизм в ООП. Для того чтобы переписать метод (это можно сделать только в классе наследнике) нужно
    //// поставить символ @ и ключевое слово Override и далее уже идет сам метод который нужно переписать
    @Override
    public void eat(){
        System.out.println("Dog is eating");
        // При переопределении метода родителя в методе потомке, будет происходить вывод кода метода
        // потомка, поскольку метод был переназначен для определенного класса (класса потомка) -
        //позднее связывание. Если в потомке нет реализации метода, будет вызываться реализация метода родителя

// При использовании Полиморфизма в ООП в случае когда метод переписывается, желательно сохранить базовый
//функционал метода, так как изменение базового функционала приведет к путанице при использовании классов, где
//методы были переписаны, относительно тех которые были. Например, если метод выводит значения желательно, чтобы
// он и продолжал их выводить после переписи дополненный дополнительным выводом данных
    }
    public void bark(){
        System.out.println("Dog is barking");

    }
}
